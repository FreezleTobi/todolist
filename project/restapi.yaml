swagger: '2.0'
info:
  version: 1.0.0
  title: ToDo Lists
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: 127.0.0.1
tags:
- name: list
  description: ToDo Lists
- name: user
  description: User Management
# schemes:
# - http
paths:
  /list:
    post:
      tags:
      - list
      summary: Add a new ToDo List
      operationId: addList
      consumes:
      - application/json
      produces:
      - application/json
      responses:
          200:
          description: successful operation
          500: unexpected error
          description: 
  /list/{list_id}:
    get:
      tags:
      - list
      summary: All Entries from a specific ToDo List
      description: Returns a single list
      operationId: getListById
      produces:
      - application/json
      parameters:
      - name: list_id
        in: path
        description: ID of list to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
        404:
          description: List not found
    delete:
      tags:
      - list
      summary: Deletes a specific ToDo List with all Entries
      operationId: deletesListById
      parameters:
      - name: list_id
        in: path
        description: ID of list that needs to be deleted
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
        404:
          description: List not found
  /list/{list_id}/entry:
    post:
      tags:
      - list
      summary: adds a new entry to a specific todo list
      operationId: addEntry
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: list_id
        in: path
        description: ID of List
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
        500:
          description: unexpected error
  /list/{list_id}/entry/{entry_id}:
    post:
    - list
    summary: updates a specific entry from a specific todo list
    operationId: updateEntry
    consumes:
    - application/json
    parameters:
    - name: list_id
      in: path
      description: ID of List
      required: true
      type: integer
      format: int64
    - name: entry_id
      in: path
      description: ID of Entry
      required: true
      type: integer
      format: int64
    responses:
      200:
        description: successful operation
      404:
        description: Entry not found
    delete:
    - list
    summary: deletes a specific entry from a specific todo list
    operationId: deleteEntry
    parameters:
    - name: list_id
      in: path
      description: ID of List
      required: true
      type: integer
      format: int64
    - name: entry_id
      in: path
      description: ID of Entry
      required: true
      type: integer
      format: int64
    responses:
      200:
        description: successful operation
      404:
        description: Entry not found
  /users:
    get:
      tags:
      - user
      summary: Get all Users
      description: Returns a list of all users
      operationId: getUsers
      produces:
      - application/json
      parameters: []
  /user:
    post:
      tags:
      - user
      summary: Adds a new user
      operationId: addUser
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: successful operation
        500:
          description: unexpected error
  /user/{user_id}:
    delete:
      tags:
      - user
      summary: Deletes specific user
      operationId: deleteUser
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
        404:
          description: User not found
definitions:
  ToDoList:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      entries:
        type: array
        items:
          $ref: '#/definitions/TodoList'
  ToDoEntry:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      password:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
# Added by API Auto Mocking Plugin
host: 127.0.0.1
basePath: /FreezleTobi/ToDoList/1.0.0
schemes:
 - https
 - http